function score = final_superscheme(X)
    [DCT_ssim, DCT_N, DCT_step] = final_DCT_compressor(X);
    [LBT_ssim,LBT_N,LBT_s,LBT_step] = final_LBT_compressor(X);
    [DWT_ssim, DWT_N, DWT_layers, DWT_step] = final_DWT_compressor(X);
    
    [DCT_vlc, bits, huffval] = jpegenc(X-128,DCT_step,DCT_N,DCT_N,true,8);
    DCT_Z = jpegdec(DCT_vlc,DCT_step,DCT_N,DCT_N,bits,huffval,8);
    
    [LBT_vlc, bits, huffval] = LBTenc(X-128, LBT_step, LBT_s, LBT_N, LBT_N,true,8);
    LBT_Z = LBTdec(LBT_vlc,LBT_step,LBT_s,LBT_N,LBT_N,bits,huffval,8);
     
    [DWT_vlc, bits, huffval] = DWTenc(X, DWT_step, DWT_N, DWT_layers, DWT_N,true,8)
    DWT_Z = DWTdec(DWT_vlc,DWT_step,DWT_layers,DWT_N,DWT_N,bits,huffval,8);
    
    if DCT_ssim >= LBT_ssim
       display("DCT encoding used")
       display("N/M : " + DCT_N + ", step : " + DCT_step)
       display("RMS error : " + std(DCT_Z(:)-X(:)) + ", bits : " + (sum(DCT_vlc(:,2))+1424)) 
       draw(DCT_Z)
       score = 1
       return
    end
    
    if 
    